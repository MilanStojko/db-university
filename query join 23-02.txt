1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
SELECT * 
FROM `students` 
INNER JOIN `degrees` ON `students`.`degree_id` = `degrees`.`id` 
WHERE `degrees`.`name` = "Corso di Laurea in Economia"
------------------------------------------------------------------------------------------------
2. Selezionare tutti i Corsi di Laurea del Dipartimento di Neuroscienze
SELECT * 
FROM `degrees` 
INNER JOIN `departments` ON `degrees`.`department_id` = `departments`.`id` 
WHERE `departments`.`name` = "Dipartimento di Neuroscienze"
--------------------------------------------------------------------------------------------------
3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
SELECT *
FROM `courses` 
INNER JOIN `course_teacher` 
ON `course_teacher`.`course_id` = `courses`.`id` 
INNER JOIN `teachers` 
ON `teachers`.`id` = `course_teacher`.`teacher_id` 
WHERE `teachers`.`id` = 44
------------------------------------------------------------------------------------------------------
4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome
SELECT * 
FROM `students` 
INNER JOIN `degrees` 
ON `students`.`degree_id` = `degrees`.`id` 
INNER JOIN `departments` 
ON `degrees`.`department_id` = `departments`.`id` 
ORDER BY `students`.`surname` ASC, `students`.`name` ASC;
-----------------------------------------------------------------------------------------------------------
5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
SELECT `degrees`.`name`, `degrees`.`level`, `degrees`.`website`, `courses`.`name`, `courses`.`cfu`, `teachers`.`name`, `teachers`.`surname`
FROM `degrees`
INNER JOIN `courses`
ON `courses`.`degree_id`= `degrees`.`id`
INNER JOIN `course_teacher` 
ON `course_teacher`.`course_id` = `courses`.`id` 
INNER JOIN `teachers` 
ON `teachers`.`id` = `course_teacher`.`teacher_id`
ORDER BY `degrees`.`id`
------------------------------------------------------------------------------------------------------------
6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)
SELECT `teachers`.`id`, `teachers`.`name`, `teachers`.`surname`
FROM `teachers`
INNER JOIN `course_teacher`
ON `teachers`.`id` = `course_teacher`.`teacher_id`
INNER JOIN `courses`
ON `course_teacher`.`course_id` = `courses`.`id`
INNER JOIN `degrees`
ON `courses`.`degree_id` = `degrees`.`id`
INNER JOIN 	`departments`
ON `degrees`.`department_id` = `departments`.`id`
WHERE `departments`.`name` = "Dipartimento di Matematica"
GROUP BY `teachers`.`id`
ORDER BY `teachers`.`name` ASC
----------------------------------------------------------------------------------------------------------
7. BONUS: Selezionare per ogni studente quanti tentativi dâ€™esame ha sostenuto per
superare ciascuno dei suoi esami
SELECT `student_id` AS `studente`,  `exams`.`course_id` AS `esame`, 
COUNT(`courses`.`id`) AS `tentativi`, 
COUNT(CASE WHEN `exam_student`.`vote` <18 THEN 1 END) AS `fallimenti`,
(COUNT(`courses`.`id`) - COUNT(CASE WHEN `exam_student`.`vote` <18 THEN 1 END)) AS `superato`
FROM `exam_student`
INNER JOIN `exams` ON `exams`.`id` = `exam_student`.`exam_id`
INNER JOIN `courses` ON `courses`.`id` = `exams`.`course_id`
GROUP BY `studente`, `esame`
HAVING `superato` > 0
ORDER BY `studente` ASC
---------------------------------------------------------------------------------------
SELECT `students`.`id`, 
`students`.`name`, 
`students`.`surname`, 
`courses`.`name`, 
COUNT(`exam_student`.`vote`) AS `numero_tentativi`, 
MAX(`exam_student`.`vote`) AS `voto_massimo`

FROM `students`
INNER JOIN `exam_student` ON `students`.`id` = `exam_student`.`student_id` 
INNER JOIN `exams` ON `exam_student`.`exam_id` = `exams`.`id`
INNER JOIN `courses` ON `exams`.`course_id` = `courses`.`id`

GROUP BY `students`.`id`, `courses`.`id`
HAVING `voto_massimo` >= 18
-----------------------------------------------------------------------------------------


